language: cpp
dist: trusty

os:
  - linux
  - osx

compiler:
  - gcc
  # - clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

env:
  matrix:
    - CXX_STANDARD=98
    # - CXX_STANDARD=11
  global:
    - secure: ${GH_PERSONAL_ACCESS_TOKEN}
    - LMFIT_TAG: master
    # - LMFIT_TAG: v8.2.2

install:
  - cd ${TRAVIS_BUILD_DIR}
  # - git clone -b ${LMFIT_TAG} https://github.com/InsightSoftwareConsortium/lmfit.git
  - git clone https://jugit.fz-juelich.de/mlz/lmfit

script:
  - cd ${TRAVIS_BUILD_DIR}/lmfit
  - rm ${TRAVIS_BUILD_DIR}/lmfit/lib/CMakeLists.txt
  - cp ${TRAVIS_BUILD_DIR}/CMakeLists.txt ${TRAVIS_BUILD_DIR}/lmfit/lib/CMakeLists.txt
  - cmake . -Bbin -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/install -DCMAKE_CXX_STANDARD=${CXX_STANDARD} -DBUILD_SHARED_LIBS=OFF -DLIB_MAN=OFF
  - cd ${TRAVIS_BUILD_DIR}/lmfit/bin
  - cmake --build . --config RELEASE
  - cmake --build . --config RELEASE --target install

after_success:
  - export ZIP_NAME=lmfit_${LMFIT_TAG}_${TRAVIS_OS_NAME}_${CXX}_CXX${CXX_STANDARD}
  - cd ${TRAVIS_BUILD_DIR}/install
  - zip -r ${ZIP_NAME}.zip * # zip
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir deployment
  - cp install/${ZIP_NAME}.zip deployment/${ZIP_NAME}.zip

deploy:
  provider: releases # GitHub
  # name: lmfit_${LMFIT_TAG}
  api_key:
    secure: ${GH_PERSONAL_ACCESS_TOKEN}
  file_glob: ON # to use wildcards
  file: deployment/*
  skip_cleanup: ON
  on:
    tags: true
